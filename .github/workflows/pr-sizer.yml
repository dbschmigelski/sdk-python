name: PR Size Labeler

on:
  pull_request_target:
    branches: main

jobs:
  authorization-check:
    permissions: read-all
    runs-on: ubuntu-latest
    outputs:
      approval-env: ${{ steps.collab-check.outputs.result }}
    steps:
      - name: Collaborator Check
        uses: actions/github-script@v8
        id: collab-check
        with:
          result-encoding: string
          script: |
            try {
              const permissionResponse = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: context.payload.pull_request.user.login,
              });
              const permission = permissionResponse.data.permission;
              const hasWriteAccess = ['write', 'admin'].includes(permission);
              if (!hasWriteAccess) {
                console.log(`User ${context.payload.pull_request.user.login} does not have write access`);
                return "manual-approval"
              } else {
                console.log(`Verified ${context.payload.pull_request.user.login} has write access. Auto approving.`)
                return "auto-approve"
              }
            } catch (error) {
              console.log(`${context.payload.pull_request.user.login} does not have write access.`)
              return "manual-approval"
            }

  size-label:
    runs-on: ubuntu-latest
    needs: authorization-check
    if: needs.authorization-check.outputs.approval-env == 'auto-approve'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate PR size and apply label
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;
            const totalChanges = pr.additions + pr.deletions;
            
            let sizeLabel;
            if (totalChanges <= 20) sizeLabel = 'size/xs';
            else if (totalChanges <= 100) sizeLabel = 'size/s';
            else if (totalChanges <= 500) sizeLabel = 'size/m';
            else if (totalChanges <= 1000) sizeLabel = 'size/l';
            else {
              sizeLabel = 'size/xl';
              core.setFailed(`PR is too large (${totalChanges} lines). Please split into smaller PRs.`);
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: [sizeLabel]
            });
